# Default values for django-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1
namespace: aspnet
name: aspnet-deployment
app: aspnet

image:
  app:
    container:
      name: aspnet-deployment
      image:
        repository: 266735847393.dkr.ecr.eu-west-1.amazonaws.com/my-app-ecr
        tag: aspnet  
        pullSecrets: ecr-registry-secret
      port: 5000 
  pullPolicy: Always

aws:
  secretName: rds-asp-credentials

service:
  type: ClusterIP
  name: aspnet-service
  port: 80


# Setup naming of env variables used for database connection
env:
  postgresDbName:
    name: POSTGRES_DB
  postgresUser:
    name: POSTGRES_USER
  postgresPassword:
    name: POSTGRES_PASSWORD
  postgresHost:
    name: POSTGRES_HOST
  postgresPort:
    name: POSTGRES_PORT

ingress:
  name: nginx-ingress
  enabled: true
  className: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: "" 
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}